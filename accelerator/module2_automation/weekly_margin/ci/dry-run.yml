name: Weekly Margin Dry Run

on:
  pull_request:
    paths:
      - 'accelerator/module2_automation/weekly_margin/**'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install duckdb sqlfluff

      - name: Seed DuckDB stub
        run: |
          python - <<'PY'
          import duckdb
          import pathlib

          db_path = pathlib.Path('data/warehouse.duckdb')
          db_path.parent.mkdir(parents=True, exist_ok=True)
          con = duckdb.connect(db_path.as_posix())
          con.execute('CREATE SCHEMA IF NOT EXISTS data;')
          con.execute('DROP TABLE IF EXISTS data.transactions;')
          con.execute(
              """
              CREATE TABLE data.transactions AS
              SELECT * FROM (VALUES
                  (DATE '2024-01-01', 1000, 600, FALSE),
                  (DATE '2024-01-02', 900, 500, FALSE),
                  (DATE '2024-01-03', 100, 50, TRUE)
              ) AS t(order_date, revenue, cost, return_flag);
              """
          )
          con.close()
          pathlib.Path('logs').mkdir(exist_ok=True)
          pathlib.Path('analytics').mkdir(exist_ok=True)
          PY

      - name: Run SQLFluff
        run: |
          sqlfluff lint accelerator/module2_automation/weekly_margin/scripts/weekly_margin.sql --config accelerator/module2_automation/weekly_margin/ci/sqlfluff.yml

      - name: Execute dry-run
        env:
          DUCKDB_PATH: data/warehouse.duckdb
          OUTPUT_PATH: analytics/weekly_margin.csv
          LOG_PATH: logs/workflow_margin.log
        run: |
          python accelerator/module2_automation/weekly_margin/scripts/weekly_margin.py --dry-run
